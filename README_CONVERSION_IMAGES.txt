GUIDE DE CONVERSION D'IMAGES EN WEBP
=====================================

Ce guide explique comment convertir vos images en format WebP pour optimiser votre site web.

üìÅ STRUCTURE DES DOSSIERS
=========================

Le projet contient maintenant ces dossiers :
- images-to-convert/ : Placez ici vos nouvelles images √† convertir
- output-webp/ : Les images converties seront sauvegard√©es ici

üõ†Ô∏è SCRIPTS DISPONIBLES
=======================

1. convert-to-webp.js (Node.js avec Sharp)
   - Conversion de haute qualit√©
   - Support de nombreux formats
   - Options de compression avanc√©es

2. convert-images.sh (Script bash simple)
   - Utilise ImageMagick
   - Conversion rapide
   - Interface simple

3. convert-new-images.sh (Script pour nouvelles images)
   - Convertit automatiquement les images du dossier images-to-convert/
   - Sauvegarde dans output-webp/
   - Id√©al pour le workflow quotidien

üìã PR√âREQUIS
============

Pour le script Node.js :
- Node.js install√©
- Package Sharp : npm install sharp

Pour les scripts bash :
- ImageMagick install√©
- Sur macOS : brew install imagemagick
- Sur Ubuntu : sudo apt-get install imagemagick

üöÄ UTILISATION RAPIDE
=====================

1. Placez vos images dans le dossier images-to-convert/

2. Ex√©cutez le script bash de conversion :
   chmod +x convert-new-images.sh
   ./convert-new-images.sh

3. Vos images converties seront dans output-webp/

Note : Cette m√©thode utilise ImageMagick (script bash), pas Node.js

üìñ UTILISATION D√âTAILL√âE
========================

SCRIPT NODE.JS (convert-to-webp.js)
-----------------------------------

Installation :
npm install sharp

Utilisation :
node convert-to-webp.js [dossier_source] [dossier_destination]

Exemples :
- Convertir toutes les images du dossier actuel :
  node convert-to-webp.js

- Convertir un dossier sp√©cifique :
  node convert-to-webp.js ./mes-images ./images-converties

- Convertir une image sp√©cifique :
  node convert-to-webp.js ./image.jpg ./output/

SCRIPT BASH SIMPLE (convert-images.sh)
--------------------------------------

Installation ImageMagick :
# macOS
brew install imagemagick

# Ubuntu/Debian
sudo apt-get install imagemagick

Utilisation :
./convert-images.sh [fichier_source] [fichier_destination]

Exemples :
- Convertir une image :
  ./convert-images.sh photo.jpg photo.webp

- Convertir avec qualit√© sp√©cifique :
  ./convert-images.sh photo.jpg photo.webp 80

SCRIPT NOUVELLES IMAGES (convert-new-images.sh)
-----------------------------------------------

Ce script automatise la conversion des nouvelles images :

1. Placez vos images dans images-to-convert/
2. Ex√©cutez : ./convert-new-images.sh
3. Les images converties apparaissent dans output-webp/

‚öôÔ∏è OPTIONS DE CONVERSION
========================

QUALIT√â (0-100) :
- 90-100 : Qualit√© maximale, fichiers plus gros
- 70-89 : Bon √©quilibre qualit√©/taille
- 50-69 : Compression plus forte
- 0-49 : Compression maximale (d√©conseill√©)

FORMATS SUPPORT√âS :
- JPEG, PNG, TIFF, BMP, GIF
- Formats RAW (NEF, CR2, etc.)
- Formats vectoriels (SVG)

üîß D√âPANNAGE
============

ERREUR "Sharp not found" :
npm install sharp

ERREUR "ImageMagick not found" :
# macOS
brew install imagemagick

# Ubuntu
sudo apt-get install imagemagick

ERREUR "Permission denied" :
chmod +x convert-images.sh
chmod +x convert-new-images.sh

ERREUR "No such file or directory" :
V√©rifiez que les dossiers images-to-convert/ et output-webp/ existent

üìä COMPARAISON DES M√âTHODES
===========================

NODE.JS (Sharp) :
‚úÖ Qualit√© optimale
‚úÖ Support de nombreux formats
‚úÖ Options avanc√©es
‚ùå N√©cessite Node.js
‚ùå Plus lent pour de gros volumes

BASH (ImageMagick) :
‚úÖ Rapide
‚úÖ Simple √† utiliser
‚úÖ Pas de d√©pendances Node.js
‚ùå Moins d'options de compression
‚ùå N√©cessite ImageMagick

üí° CONSEILS D'OPTIMISATION
==========================

1. CHOIX DE LA QUALIT√â :
   - Photos : 80-90
   - Logos/ic√¥nes : 90-100
   - Images web : 70-85

2. TAILLE DES IMAGES :
   - Avant conversion : redimensionnez si n√©cessaire
   - Utilisez des outils comme ImageMagick ou Sharp

3. NOMENCLATURE :
   - Gardez les noms originaux
   - Ajoutez des suffixes si n√©cessaire (ex: _webp)

4. ORGANISATION :
   - Gardez les originaux en backup
   - Organisez par dossiers th√©matiques

üîÑ WORKFLOW RECOMMAND√â
======================

1. Pr√©parez vos images (redimensionnement si n√©cessaire)
2. Placez-les dans images-to-convert/
3. Ex√©cutez convert-new-images.sh
4. V√©rifiez la qualit√© dans output-webp/
5. Int√©grez les images WebP dans votre site

üì± OPTIMISATION MOBILE
======================

Pour les sites mobiles :
- Utilisez une qualit√© de 70-80
- Redimensionnez √† la taille d'affichage
- Testez sur diff√©rents appareils

üåê INT√âGRATION WEB
==================

Dans votre HTML :
<img src="image.webp" alt="Description" />

Avec fallback :
<picture>
  <source srcset="image.webp" type="image/webp">
  <img src="image.jpg" alt="Description">
</picture>

üìà AVANTAGES WEBP
=================

- Taille r√©duite de 25-35% vs JPEG
- Support de la transparence
- Compression sans perte possible
- Support moderne des navigateurs

‚ö†Ô∏è LIMITATIONS
==============

- Support limit√© sur Internet Explorer
- N√©cessite un fallback pour les anciens navigateurs
- Certains outils peuvent ne pas supporter WebP

üîó RESSOURCES UTILES
====================

- Documentation Sharp : https://sharp.pixelplumbing.com/
- Documentation ImageMagick : https://imagemagick.org/
- Can I Use WebP : https://caniuse.com/webp
- Google WebP : https://developers.google.com/speed/webp

üìû SUPPORT
==========

En cas de probl√®me :
1. V√©rifiez les pr√©requis
2. Consultez les messages d'erreur
3. Testez avec une image simple
4. V√©rifiez les permissions des fichiers

üéØ CONCLUSION
=============

La conversion en WebP am√©liore significativement les performances de votre site web. Utilisez le script qui correspond le mieux √† vos besoins et votre environnement de d√©veloppement.

Bonnes conversions ! üöÄ 